<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TILs on Dilip Kushwaha</title>
    <link>http://kushdilip.github.io/blog-old/til/</link>
    <description>Recent content in TILs on Dilip Kushwaha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Feb 2016 19:28:38 +0530</lastBuildDate>
    <atom:link href="http://kushdilip.github.io/blog-old/til/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Recursively rename file folder names</title>
      <link>http://kushdilip.github.io/blog-old/til/shell/recursively-rename-file-folder-names/</link>
      <pubDate>Mon, 22 Feb 2016 19:28:38 +0530</pubDate>
      
      <guid>http://kushdilip.github.io/blog-old/til/shell/recursively-rename-file-folder-names/</guid>
      <description>&lt;p&gt;Below commands will help you recursively rename file &amp;amp; folder names&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First install zsh
&lt;a href=&#34;http://strcat.de/zsh/#zmv&#34;&gt;http://strcat.de/zsh/#zmv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;run the commands in shell&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ zsh
$ autoload zmv
$ zmv -W &#39;**/*dk*&#39; &#39;**/*kd*â€™
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;For reference &lt;a href=&#34;http://www.drbunsen.org/batch-file-renaming/&#34;&gt;http://www.drbunsen.org/batch-file-renaming/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Syncing git repo fork with upstream</title>
      <link>http://kushdilip.github.io/blog-old/til/git/syncing-git-repo-fork-with-upstream/</link>
      <pubDate>Sat, 13 Feb 2016 22:38:57 +0530</pubDate>
      
      <guid>http://kushdilip.github.io/blog-old/til/git/syncing-git-repo-fork-with-upstream/</guid>
      <description>&lt;p&gt;Sometimes we fork git repositories and use the forked repo in our projects. But these fork repos get outdated as the upstream repo maintainers keep pushing commits.
Here I will give you few commands to sync the forked repos with upstream repository.&lt;/p&gt;

&lt;p&gt;1 . &lt;a href=&#34;https://help.github.com/articles/configuring-a-remote-for-a-fork/&#34;&gt;First is configuring a remote for a fork&lt;/a&gt;
In terminal run &lt;code&gt;git remote -v&lt;/code&gt; which will give you fetch and push origins pointing to your forked repo.&lt;/p&gt;

&lt;p&gt;for e.g. if I run the command for this project &lt;a href=&#34;https://github.com/kushdilip/hugo-icarus-theme&#34;&gt;https://github.com/kushdilip/hugo-icarus-theme&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote -v
origin	https://github.com/kushdilip/hugo-icarus-theme.git (fetch)
origin	https://github.com/kushdilip/hugo-icarus-theme.git (push)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 . Now add point upstream repo using below command. On github projects you can see the link to repo you forked from.
&lt;code&gt;git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now my &lt;code&gt;git remote -v&lt;/code&gt; gives&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote -v
origin	https://github.com/kushdilip/hugo-icarus-theme.git (fetch)
origin	https://github.com/kushdilip/hugo-icarus-theme.git (push)
upstream	https://github.com/digitalcraftsman/hugo-icarus-theme.git (fetch)
upstream	https://github.com/digitalcraftsman/hugo-icarus-theme.git (push)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3 . &lt;a href=&#34;https://help.github.com/articles/syncing-a-fork/&#34;&gt;Merging forked master with upstream master&lt;/a&gt;
  - run &lt;code&gt;git fetch upstream&lt;/code&gt;
  - now &lt;code&gt;git checkout master&lt;/code&gt;
  - finally &lt;code&gt;git merge upstream/master&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Binding style attribute and safestring in Ember</title>
      <link>http://kushdilip.github.io/blog-old/til/ember/binding-style-attribute-and-safestring/</link>
      <pubDate>Sat, 13 Feb 2016 19:53:42 +0530</pubDate>
      
      <guid>http://kushdilip.github.io/blog-old/til/ember/binding-style-attribute-and-safestring/</guid>
      <description>&lt;p&gt;Many times we want to have custom styles in our ember templates which are controlled via controller/components.&lt;/p&gt;

&lt;p&gt;For above purpose we can form the whole style string as computed property and do the binding in htmlbars, but there are two things we need to take care of
  1. Don&amp;rsquo;t put quotes around that binding property in template.
  2. return safeString value from computed property&lt;/p&gt;

&lt;p&gt;Below code demonstrates how to do that.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;components/x-component.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default Ember.Component.extend({
  progress: 0,
  barWidth: Ember.computed(&#39;progress&#39;, {
    get(){
      return Ember.String.htmlSafe(`width: ${this.get(&#39;progress&#39;)}%`);
    }
  })
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the usage of  &lt;code&gt;Ember.String.htmlSafe&lt;/code&gt; in above code, and template strings  in computed property.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;templates/components/x-component.hbs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;progress-bar&amp;quot; style={{barWidth}}&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the no quotes around &lt;code&gt;{{barWidth}}&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ember addon install package old &amp; new</title>
      <link>http://kushdilip.github.io/blog-old/til/ember/addon-install-package-new-old/</link>
      <pubDate>Thu, 11 Feb 2016 23:59:04 +0530</pubDate>
      
      <guid>http://kushdilip.github.io/blog-old/til/ember/addon-install-package-new-old/</guid>
      <description>&lt;p&gt;Ember-cli provides &lt;code&gt;addAddonsToProject&lt;/code&gt; api method for addon developers to install other addons using blueprints. In older versions of ember-cli(perhaps &amp;lt; 1.13) &lt;code&gt;addAddonsToProject&lt;/code&gt; method doesn&amp;rsquo;t accepts array of packages but the new one does.&lt;/p&gt;

&lt;p&gt;So here is the code to support your addon users who are using old or newer versions of ember-cli.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;my-addon/blueprints/my-addon/index.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;module.exports = {
  description: &#39;Blueprint to install dependencies for your ember addon projects&#39;,
  
  normalizeEntityName: function() {}, // no-op since we&#39;re just adding dependencies
  
  afterInstall: function(options) {
      // sample packages list
      var packages = [
        &#39;ember-cli-mirage&#39;,
        &#39;ember-metrics&#39;
      ];
      
      this.installPackages(packages);
  ),
  
  //This is not provided by Ember-cli
  installPackages: function(options, packages) {
    if (typeof this.addAddonsToProject === &#39;function&#39;) { // newer versions of ember-cli
      return this.addAddonsToProject({
        packages: packages
      });
    }
    
    return packages.reduce(function (prev, pkg, index) {
      if (index === 1) {
        prev = this.addAddonToProject(prev);
      }
      return prev.then(this.addAddonToProject(pkg));
    }.bind(this));
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>